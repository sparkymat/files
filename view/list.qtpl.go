// Code generated by qtc from "list.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line view/list.qtpl:1
package view

//line view/list.qtpl:1
import "github.com/sparkymat/files/internal/presenter"

//line view/list.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line view/list.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line view/list.qtpl:3
func StreamList(qw422016 *qt422016.Writer, list presenter.List) {
//line view/list.qtpl:3
	qw422016.N().S(`
  <div class="container-fluid">
    <div class="row">
      <nav class="col s12">
        <div class="nav-wrapper">
          <div class="col s12">
            `)
//line view/list.qtpl:9
	for _, pathSegment := range list.PathSegments {
//line view/list.qtpl:9
		qw422016.N().S(`
              <a href="`)
//line view/list.qtpl:10
		qw422016.E().S(pathSegment.Path)
//line view/list.qtpl:10
		qw422016.N().S(`" class="breadcrumb">`)
//line view/list.qtpl:10
		qw422016.E().S(pathSegment.Label)
//line view/list.qtpl:10
		qw422016.N().S(`</a>
            `)
//line view/list.qtpl:11
	}
//line view/list.qtpl:11
	qw422016.N().S(`
          </div>
        </div>
      </nav>
      <table>
        <thead>
          <tr>
            <th>Name</th>
            <th>Type</th>
          </tr>
        </thead>
        <tbody>
          `)
//line view/list.qtpl:23
	for _, entry := range list.Entries {
//line view/list.qtpl:23
		qw422016.N().S(`
            <tr>
              <td>
                <a href="`)
//line view/list.qtpl:26
		qw422016.E().S(entry.Path)
//line view/list.qtpl:26
		qw422016.N().S(`">
                  <span class="entry-row">
                    <i class="material-icons">`)
//line view/list.qtpl:28
		qw422016.E().S(entry.MaterialIcon)
//line view/list.qtpl:28
		qw422016.N().S(`</i>
                    `)
//line view/list.qtpl:29
		qw422016.E().S(entry.Label)
//line view/list.qtpl:29
		qw422016.N().S(`
                  </span>
                </a>
              </td>
              <td>`)
//line view/list.qtpl:33
		qw422016.E().S(entry.Type)
//line view/list.qtpl:33
		qw422016.N().S(`</td>
            </tr>
          `)
//line view/list.qtpl:35
	}
//line view/list.qtpl:35
	qw422016.N().S(`
        </tbody>
      </table>
    </div>
  </div>
`)
//line view/list.qtpl:40
}

//line view/list.qtpl:40
func WriteList(qq422016 qtio422016.Writer, list presenter.List) {
//line view/list.qtpl:40
	qw422016 := qt422016.AcquireWriter(qq422016)
//line view/list.qtpl:40
	StreamList(qw422016, list)
//line view/list.qtpl:40
	qt422016.ReleaseWriter(qw422016)
//line view/list.qtpl:40
}

//line view/list.qtpl:40
func List(list presenter.List) string {
//line view/list.qtpl:40
	qb422016 := qt422016.AcquireByteBuffer()
//line view/list.qtpl:40
	WriteList(qb422016, list)
//line view/list.qtpl:40
	qs422016 := string(qb422016.B)
//line view/list.qtpl:40
	qt422016.ReleaseByteBuffer(qb422016)
//line view/list.qtpl:40
	return qs422016
//line view/list.qtpl:40
}
